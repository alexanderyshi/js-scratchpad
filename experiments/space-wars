<!DOCTYPE html>
 <! -- https://developer.mozilla.org/en-US/docs/Games/Tutorials/2D_Breakout_game_pure_JavaScript/Create_the_Canvas_and_draw_on_it -->
<html>
<head>
    <meta charset="utf-8" />
    <title>SPACE WARS</title>
    <style>
    	* { padding: 0; margin: 0; }
    	canvas { background: #416; display: block; margin: 0 auto; 
    		width:  100%;
  			height: 100%;
			}
    </style>
</head>
<body>
<p id="dbg"></p>

<canvas id="mCanvas" width="window.innerWidth" height="window.innerHeight"></canvas>

<script>
	var canvas = document.getElementById("mCanvas");
	var ctx = canvas.getContext("2d");

	// gameplay vars
	var bearing = 0;
	var pos_x = 0;
	var pos_y = 0;
	var vel_x = 0;
	var vel_y = 0;
	var ACCEL_RATE = 5;
	var SHIP_RADIUS = 10;

	// event listeners and flags
	var rightPressed = false;
	var upPressed = false;
	var leftPressed = false;

	document.addEventListener("keydown", keyDownHandler, false);
	document.addEventListener("keyup", keyUpHandler, false);

	function keyDownHandler(e) {
	    if(e.keyCode == 39) {
	        rightPressed = true;
	    }
	    else if(e.keyCode == 37) {
	        leftPressed = true;
	    }
	    else if(e.keyCode == 38) {
	        upPressed = true;
	    }
	}

	function keyUpHandler(e) {
	    if(e.keyCode == 39) {
	        rightPressed = false;
	    }
	    else if(e.keyCode == 37) {
	        leftPressed = false;
	    }
	    else if(e.keyCode == 38) {
	        upPressed = false;
	    }
	}

	function degToRad(angle) {
		return angle/180*Math.PI;
	}

	function draw() {
		// update on resize	  	
	  	ctx.canvas.width  = window.innerWidth;
	  	ctx.canvas.height = window.innerHeight;

	  	// clear canvas
		ctx.clearRect(0,0, canvas.width, canvas.height);
		// draw ship
		ctx.beginPath();
		ctx.moveTo(pos_x,pos_y);
		ctx.lineTo(pos_x + 30*Math.cos(degToRad(bearing)), pos_y + 30*Math.sin(degToRad(bearing)));
		ctx.strokeStyle = "rgba(220,220,220,1)";
		ctx.stroke();
		ctx.fillStyle = "#efefef";
		ctx.arc(pos_x, pos_y, 15, 0, Math.PI*2, false);
		ctx.fill();
		ctx.closePath();
	} 

	function calculateDelta() {
	  	// TODO: check and reset flags eventually with preset increments?
		var isAccelerating = false;
		if (rightPressed) {
			bearing += 5;
		}
		if (leftPressed) {
			bearing -= 5;
		}
		if (upPressed) {
			vel_y += ACCEL_RATE*Math.sin(degToRad(bearing));
			vel_x += ACCEL_RATE*Math.cos(degToRad(bearing));
			isAccelerating = false;
		}
		if (!isAccelerating) {
			vel_x *= .9;
			vel_x = (Math.abs(vel_x) > 0.5) ? vel_x : 0;
			vel_y *= .9;
			vel_y = (Math.abs(vel_y) > 0.5) ? vel_y : 0;
		}

		pos_x += vel_x;
		if (pos_x < 0) {
			pos_x += ctx.canvas.width;
		}
		if (pos_x > ctx.canvas.width) {
			pos_x -= ctx.canvas.width;
		}
		pos_y += vel_y;
		if (pos_y < 0) {
			pos_y += ctx.canvas.height;
		}
		if (pos_y > ctx.canvas.height) {
			pos_y -= ctx.canvas.height;
		}
	}

	function update() {
		calculateDelta();
		draw();
	} setInterval(update, 33);
</script>


</body>
</html>